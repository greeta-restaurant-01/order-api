spring:
  application:
    name: order
  main:
    allow-bean-definition-overriding: true
  output:
    ansi:
      enabled: ALWAYS
  jpa:
    hibernate:
      ddl-auto: create
  datasource:
    url: jdbc:postgresql://localhost:5433/orderdb
    username: postgres
    password: postgres
  keycloak:
    server-url: http://localhost:8080
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${spring.keycloak.server-url}/realms/order-realm
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset: latest
    streams:
      bootstrap-servers: localhost:9092
      application-id: orders-kafka-streams

    properties:
      default:
        key:
          serde: 'org.apache.kafka.common.serialization.Serdes$StringSerde'
        value:
          serde: 'org.apache.kafka.common.serialization.Serdes$StringSerde'
        deserialization:
          exception:
            handler: 'org.apache.kafka.streams.errors.LogAndContinueExceptionHandler'
        serialization:
          exception:
            handler: 'net.greeta.order.exceptionhandler.StreamsSerializationExceptionHandler'

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
  level:
    org.springframework.cloud.kubernetes: TRACE
    org.springframework.security: DEBUG

info:
  system: Order Service

server:
  forward-headers-strategy: framework

jwt:
  auth:
    converter:
      resource-id: order-app
      principal-attribute: preferred_username

management:
  endpoints:
    web:
      exposure:
        include: bindings, configprops, env, flyway, functions, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


openapi:
  oauthflow:
    authServerUrl: http://localhost:8080
    realm: order-realm